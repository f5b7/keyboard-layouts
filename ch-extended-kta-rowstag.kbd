#|
  One-shot
  * Left Shift

  Tap / Hold:
  * Caps Word / Left Ctrl
  * ä / Right Ctrl
  * a / Left GUI
  * s / Left Alt
  * d / Left Ctrl
  * f / NAV layer
  * j / NAV layer
  * k / Right Ctrl
  * l / Left Alt (!)
  * ö / Right GUI
  * Space / SYM-1 layer
  * On SYM-1 layer: b / SYM-2 layer

  Combos (Chords):
  * jk → Return
  * ,. → Backspace
  * .- → Delete
|#

(defcfg
  movemouse-inherit-accel-state yes
  movemouse-smooth-diagonals yes
  ;; override-release-on-activation yes
)

(defvar
  tap-timeout 200
  hold-timeout 150
  hold-timeout-long 250
  ma-interval 50
  ma-accel-time 2000
  ma-min 1
  ma-max 100
  tt $tap-timeout
  ht $hold-timeout
  htl $hold-timeout-long
  mi $ma-interval
  ma $ma-accel-time
  mn $ma-min
  mx $ma-max
)

(defsrc
  ;; to avoid problems with AltGr (Alt Graph) where lctl and ralt are both pressed but only ralt is released, do not define these keys in the first place
  grv    1    2    3    4    5             6    7    8    9    0      -    ;; CH ' = Key Code 219 = Minus = -
  tab    q    w    e    r    t             y    u    i    o    p      [    ;; CH ü = Key Code 186 = BracketLeft = [
  rctl   a    s    d    f    g             h    j    k    l    ;      '
  lsft   <    z    x    c    v    b        n    m    ,    .    /      rsft ;; CH - = Key Code 189 = Slash = /
  caps      ‹❖   lalt   Space
)

(deflayer BASE
  _      _    _    _    _    _             _    _    _    _    _      _
  _      _    _    _    _    _             _    _    _    _    _      _
  _     @aLG @sLA @dLC @fNV  _             _   @jCH @kCH @lLA @öRG   @äRC
  @osS   _    _    _    _    _    _        _    _   @,CH @.CH @-CH   bspc
  @cwC       _     _     @␣S1
)

(deflayer NAV
  f12    f1   f2   f3   f4   f5            f6   f7   f8   f9  f10    f11
  lrld   _    _    _    _    _            esc  home  ▲   end  pgup   del
  _      _    _    _    _    _            ret  left  ▼   rght pgdn    _
  _     menu @❖←  @❖→  _    _   prnt     ins  mlft mmid mrgt bspc    _
  _          _     _     _
)

(deflayer SYM-1
  🔣§  🔣!  🔣@   🔣#  🔣$  🔣`          🔣^  🔣|  🔣[ 🔣]  🔣~   🔣\
  lrld 🔣χ  @mau  🔣€  🔣🔲  XX           🔣ß  🔣↑  ]   🔣⬜  🔣§   🔣}   ;; CH (dead ¨) = Key Code 192 = BracketRight = ]
  _     @mal @mad @mar   XX   XX           🔣←  🔣→  XX   XX   XX    🔣{
  _    🔣\  🔣✅ 🔣❌ 🔣🔄 🔣☑ @bS2    🔣↓  🔣μ  🔣< 🔣>  🔣\    _
  _          _     _     _
)

(deflayer SYM-2
  🔣°  🔣¹  🔣²  🔣³  RA-- S-=           =    🔣\  🔣{ 🔣}  RA-=   🔣|   ;; Right Alt + (CH ') = (dead ´)
  lrld   XX  @mau  XX  🔣☐  XX            🔣ẞ   XX   ▲   🔣◌  🔣°   XX    ;; CH (dead ^) = Key Code 221 = Equal = =
  _     @mal @mad @mar  XX   XX            ret  left  ▼   rght  XX    XX    ;; Shift + (CH dead ^) = (dead `)
  _    🔣|  🔣✔ 🔣✕ 🔣⏳  🔣✓  XX       ins  mlft mmid mrgt bspc    _    ;; Right Alt + (CH dead ^) = (dead ~)
  _          _     _     _
)

(defalias
  ;; BASE
  osS (one-shot 2000 lsft)
  cwC (tap-hold $tt $ht (caps-word 2000) lctl)
  ;; home-row
  aLG (tap-hold $tt $htl a lmet)
  sLA (tap-hold $tt $htl s lalt)
  dLC (tap-hold $tt $ht d lctl)
  fNV (tap-hold $tt $ht f (layer-toggle NAV))
  jCH (tap-hold $tt $ht (chord c1 j) (layer-toggle NAV))
  kCH (tap-hold $tt $ht (chord c1 k) rctl)
  lLA (tap-hold $tt $htl l lalt)
  öRG (tap-hold $tt $htl ; rmet)
  ;; /home-row
  äRC (tap-hold $tt $htl ' rctl)
  ,CH (chord c1 ,)
  .CH (chord c1 .)
  -CH (chord c1 -)
  ␣S1 (tap-hold $tt $ht Space (layer-toggle SYM-1))

  ;; NAV
  mau (movemouse-accel-up $mi $ma $mn $mx)
  mad (movemouse-accel-down $mi $ma $mn $mx)
  mal (movemouse-accel-left $mi $ma $mn $mx)
  mar (movemouse-accel-right $mi $ma $mn $mx)
  ❖← M-left
  ❖→ M-rght

  ;; SYM-1
  bS2 (tap-hold $tt $ht _ (layer-toggle SYM-2))
)

(defchords c1 75
  (j  ) j
  (  k) k
  (j k) ret
  (,  ) ,
  (.  ) .
  (, .) bspc
  (  -) /    ;; CH - = Key Code 189 = Slash = /
  (. -) del
)
